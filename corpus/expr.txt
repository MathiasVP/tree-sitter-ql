====
cast
====

select (Foo) f

---

(source_file (ql (moduleBody (select (SELECT) (as_exprs (as_expr (expr (cast (OPAR) (type (classname (upperId))) (CPAR) (expr (primary (variable (varname (simpleId (lowerId))))))))))))))

========
dontcare
========

select _

---

(source_file (ql (moduleBody (select (SELECT) (as_exprs (as_expr (expr (dontcare (UNDERSCORE))))))))) 

====
unop
====

select - 5, + 5

---

(source_file (ql (moduleBody (select (SELECT) (as_exprs (as_expr (expr (unop (MINUS) (expr (primary (literal (int))))))) (COMMA) (as_expr (expr (unop (PLUS) (expr (primary (literal (int))))))))))))

=====
binop
=====

select 5 + 5, 5 - 5, 5 * 5, 5 / 5, 5 % 5

---

(source_file (ql (moduleBody (select (SELECT) (as_exprs (as_expr (expr (binop (expr (primary (literal (int)))) (PLUS) (expr (primary (literal (int))))))) (COMMA) (as_expr (expr (binop (expr (primary (literal (int)))) (MINUS) (expr (primary (literal (int))))))) (COMMA) (as_expr (expr (binop (expr (primary (literal (int)))) (STAR) (expr (primary (literal (int))))))) (COMMA) (as_expr (expr (binop (expr (primary (literal (int)))) (SLASH) (expr (primary (literal (int))))))) (COMMA) (as_expr (expr (binop (expr (primary (literal (int)))) (MOD) (expr (primary (literal (int)))))))))))) 

================
binop precedence
================

select
  // left associative
  5 + 5 - 5,
  5 - 5 + 5,
  // mul binds tighter
  5 + 5 * 5,
  5 + 5 / 5,
  5 * 5 + 5,
  5 / 5 + 5,
  // left associative
  5 / 5 * 5,
  5 * 5 / 5,
  // mod tighter,
  5 * 5 % 5,
  5 % 5 * 5

---

(source_file 
  (ql 
    (moduleBody 
      (select 
        (SELECT )
        (comment )
        (as_exprs 
          (as_expr 
            (expr 
              (binop 
                (expr 
                  (binop 
                    (expr 
                      (primary 
                        (literal 
                          (int ))))
                    (PLUS )
                    (expr 
                      (primary 
                        (literal 
                          (int ))))))
                (MINUS )
                (expr 
                  (primary 
                    (literal 
                      (int )))))))
          (COMMA )
          (as_expr 
            (expr 
              (binop 
                (expr 
                  (binop 
                    (expr 
                      (primary 
                        (literal 
                          (int ))))
                    (MINUS )
                    (expr 
                      (primary 
                        (literal 
                          (int ))))))
                (PLUS )
                (expr 
                  (primary 
                    (literal 
                      (int )))))))
          (COMMA )
          (comment )
          (as_expr 
            (expr 
              (binop 
                (expr 
                  (primary 
                    (literal 
                      (int ))))
                (PLUS )
                (expr 
                  (binop 
                    (expr 
                      (primary 
                        (literal 
                          (int ))))
                    (STAR )
                    (expr 
                      (primary 
                        (literal 
                          (int )))))))))
          (COMMA )
          (as_expr 
            (expr 
              (binop 
                (expr 
                  (primary 
                    (literal 
                      (int ))))
                (PLUS )
                (expr 
                  (binop 
                    (expr 
                      (primary 
                        (literal 
                          (int ))))
                    (SLASH )
                    (expr 
                      (primary 
                        (literal 
                          (int )))))))))
          (COMMA )
          (as_expr 
            (expr 
              (binop 
                (expr 
                  (binop 
                    (expr 
                      (primary 
                        (literal 
                          (int ))))
                    (STAR )
                    (expr 
                      (primary 
                        (literal 
                          (int ))))))
                (PLUS )
                (expr 
                  (primary 
                    (literal 
                      (int )))))))
          (COMMA )
          (as_expr 
            (expr 
              (binop 
                (expr 
                  (binop 
                    (expr 
                      (primary 
                        (literal 
                          (int ))))
                    (SLASH )
                    (expr 
                      (primary 
                        (literal 
                          (int ))))))
                (PLUS )
                (expr 
                  (primary 
                    (literal 
                      (int )))))))
          (COMMA )
          (comment )
          (as_expr 
            (expr 
              (binop 
                (expr 
                  (binop 
                    (expr 
                      (primary 
                        (literal 
                          (int ))))
                    (SLASH )
                    (expr 
                      (primary 
                        (literal 
                          (int ))))))
                (STAR )
                (expr 
                  (primary 
                    (literal 
                      (int )))))))
          (COMMA )
          (as_expr 
            (expr 
              (binop 
                (expr 
                  (binop 
                    (expr 
                      (primary 
                        (literal 
                          (int ))))
                    (STAR )
                    (expr 
                      (primary 
                        (literal 
                          (int ))))))
                (SLASH )
                (expr 
                  (primary 
                    (literal 
                      (int )))))))
          (COMMA )
          (comment )
          (as_expr 
            (expr 
              (binop 
                (expr 
                  (primary 
                    (literal 
                      (int ))))
                (STAR )
                (expr 
                  (binop 
                    (expr 
                      (primary 
                        (literal 
                          (int ))))
                    (MOD )
                    (expr 
                      (primary 
                        (literal 
                          (int )))))))))
          (COMMA )
          (as_expr 
            (expr 
              (binop 
                (expr 
                  (binop 
                    (expr 
                      (primary 
                        (literal 
                          (int ))))
                    (MOD )
                    (expr 
                      (primary 
                        (literal 
                          (int ))))))
                (STAR )
                (expr 
                  (primary 
                    (literal 
                      (int ))))))))))))
