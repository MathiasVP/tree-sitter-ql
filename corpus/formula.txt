===========
comparisons
===========

from File f
where (f = f)
  or f != f
  and f < f
  and (f > f or f <= f)
  and f >= f
select f

---

(source_file 
  (ql 
    (moduleBody 
      (select 
        (FROM )
        (var_decls 
          (var_decl 
            (type 
              (classname 
                (upperId )))
            (simpleId 
              (lowerId ))))
        (WHERE )
        (formula 
          (disjunction 
            (formula 
              (fparen 
                (OPAR )
                (formula 
                  (comparison 
                    (expr 
                      (primary 
                        (variable 
                          (varname 
                            (simpleId 
                              (lowerId ))))))
                    (compop )
                    (expr 
                      (primary 
                        (variable 
                          (varname 
                            (simpleId 
                              (lowerId ))))))))
                (CPAR )))
            (OR )
            (formula 
              (conjunction 
                (formula 
                  (conjunction 
                    (formula 
                      (conjunction 
                        (formula 
                          (comparison 
                            (expr 
                              (primary 
                                (variable 
                                  (varname 
                                    (simpleId 
                                      (lowerId ))))))
                            (compop )
                            (expr 
                              (primary 
                                (variable 
                                  (varname 
                                    (simpleId 
                                      (lowerId ))))))))
                        (AND )
                        (formula 
                          (comparison 
                            (expr 
                              (primary 
                                (variable 
                                  (varname 
                                    (simpleId 
                                      (lowerId ))))))
                            (compop )
                            (expr 
                              (primary 
                                (variable 
                                  (varname 
                                    (simpleId 
                                      (lowerId ))))))))))
                    (AND )
                    (formula 
                      (fparen 
                        (OPAR )
                        (formula 
                          (disjunction 
                            (formula 
                              (comparison 
                                (expr 
                                  (primary 
                                    (variable 
                                      (varname 
                                        (simpleId 
                                          (lowerId ))))))
                                (compop )
                                (expr 
                                  (primary 
                                    (variable 
                                      (varname 
                                        (simpleId 
                                          (lowerId ))))))))
                            (OR )
                            (formula 
                              (comparison 
                                (expr 
                                  (primary 
                                    (variable 
                                      (varname 
                                        (simpleId 
                                          (lowerId ))))))
                                (compop )
                                (expr 
                                  (primary 
                                    (variable 
                                      (varname 
                                        (simpleId 
                                          (lowerId ))))))))))
                        (CPAR )))))
                (AND )
                (formula 
                  (comparison 
                    (expr 
                      (primary 
                        (variable 
                          (varname 
                            (simpleId 
                              (lowerId ))))))
                    (compop )
                    (expr 
                      (primary 
                        (variable 
                          (varname 
                            (simpleId 
                              (lowerId ))))))))))))
        (SELECT )
        (as_exprs 
          (as_expr 
            (expr 
              (primary 
                (variable 
                  (varname 
                    (simpleId 
                      (lowerId ))))))))))))

==========
instanceof
==========

from Foo f
where f instanceof Foo
select f

---

(source_file 
  (ql 
    (moduleBody 
      (select 
        (FROM )
        (var_decls 
          (var_decl 
            (type 
              (classname 
                (upperId )))
            (simpleId 
              (lowerId ))))
        (WHERE )
        (formula 
          (instanceof 
            (expr 
              (primary 
                (variable 
                  (varname 
                    (simpleId 
                      (lowerId ))))))
            (INSTANCEOF )
            (type 
              (classname 
                (upperId )))))
        (SELECT )
        (as_exprs 
          (as_expr 
            (expr 
              (primary 
                (variable 
                  (varname 
                    (simpleId 
                      (lowerId ))))))))))))

=====
range
=====

from int i
where i in [0..10]
select i

---

(source_file 
  (ql 
    (moduleBody 
      (select 
        (FROM )
        (var_decls 
          (var_decl 
            (type 
              (INT ))
            (simpleId 
              (lowerId ))))
        (WHERE )
        (formula 
          (inrange 
            (expr 
              (primary 
                (variable 
                  (varname 
                    (simpleId 
                      (lowerId ))))))
            (IN )
            (range 
              (OBLOCK )
              (expr 
                (primary 
                  (literal 
                    (int ))))
              (RANGE )
              (expr 
                (primary 
                  (literal 
                    (int ))))
              (CBLOCK ))))
        (SELECT )
        (as_exprs 
          (as_expr 
            (expr 
              (primary 
                (variable 
                  (varname 
                    (simpleId 
                      (lowerId ))))))))))))

=================
predicateRef call
=================

from int i
where bar(i) and module::baz+()
select i

---

(source_file 
  (ql 
    (moduleBody 
      (select 
        (FROM )
        (var_decls 
          (var_decl 
            (type 
              (INT ))
            (simpleId 
              (lowerId ))))
        (WHERE )
        (formula 
          (conjunction 
            (formula 
              (call 
                (predicateRef 
                  (literalId 
                    (lowerId )))
                (OPAR )
                (exprs 
                  (expr 
                    (primary 
                      (variable 
                        (varname 
                          (simpleId 
                            (lowerId )))))))
                (CPAR )))
            (AND )
            (formula 
              (call 
                (predicateRef 
                  (moduleId 
                    (qualId 
                      (simpleId 
                        (lowerId ))))
                  (SELECTION )
                  (literalId 
                    (lowerId )))
                (closure 
                  (PLUS ))
                (OPAR )
                (CPAR )))))
        (SELECT )
        (as_exprs 
          (as_expr 
            (expr 
              (primary 
                (variable 
                  (varname 
                    (simpleId 
                      (lowerId ))))))))))))

=================================
calls with results & method calls
=================================

from int i
select i.foo+(), 1.foo(), 1.1.foo()

---

(source_file 
  (ql 
    (moduleBody 
      (select 
        (FROM )
        (var_decls 
          (var_decl 
            (type 
              (INT ))
            (simpleId 
              (lowerId ))))
        (SELECT )
        (as_exprs 
          (as_expr 
            (expr 
              (primary 
                (callwithresults 
                  (call 
                    (primary 
                      (variable 
                        (varname 
                          (simpleId 
                            (lowerId )))))
                    (DOT )
                    (predicateName 
                      (lowerId ))
                    (closure 
                      (PLUS ))
                    (OPAR )
                    (CPAR ))))))
          (COMMA )
          (as_expr 
            (expr 
              (primary 
                (callwithresults 
                  (call 
                    (primary 
                      (literal 
                        (int )))
                    (DOT )
                    (predicateName 
                      (lowerId ))
                    (OPAR )
                    (CPAR ))))))
          (COMMA )
          (as_expr 
            (expr 
              (primary 
                (callwithresults 
                  (call 
                    (primary 
                      (literal 
                        (float )))
                    (DOT )
                    (predicateName 
                      (lowerId ))
                    (OPAR )
                    (CPAR )))))))))))

==============
quantification
==============


from Foo f
where exists(f.aThing())
   or exists(Foo f | f.aThing())
   or exists(Foo f | f.aThing() | f.aThing())
   or forall(Foo f | f.aThing() | f.aThing())
   or forex(Foo f | f.aThing() | f.aThing())
select f

---

(source_file 
  (ql 
    (moduleBody 
      (select 
        (FROM )
        (var_decls 
          (var_decl 
            (type 
              (classname 
                (upperId )))
            (simpleId 
              (lowerId ))))
        (WHERE )
        (formula 
          (disjunction 
            (formula 
              (disjunction 
                (formula 
                  (disjunction 
                    (formula 
                      (disjunction 
                        (formula 
                          (quantified 
                            (EXISTS )
                            (OPAR )
                            (expr 
                              (primary 
                                (callwithresults 
                                  (call 
                                    (primary 
                                      (variable 
                                        (varname 
                                          (simpleId 
                                            (lowerId )))))
                                    (DOT )
                                    (predicateName 
                                      (lowerId ))
                                    (OPAR )
                                    (CPAR )))))
                            (CPAR )))
                        (OR )
                        (formula 
                          (quantified 
                            (EXISTS )
                            (OPAR )
                            (var_decls 
                              (var_decl 
                                (type 
                                  (classname 
                                    (upperId )))
                                (simpleId 
                                  (lowerId ))))
                            (BAR )
                            (formula 
                              (call 
                                (primary 
                                  (variable 
                                    (varname 
                                      (simpleId 
                                        (lowerId )))))
                                (DOT )
                                (predicateName 
                                  (lowerId ))
                                (OPAR )
                                (CPAR )))
                            (CPAR )))))
                    (OR )
                    (formula 
                      (quantified 
                        (EXISTS )
                        (OPAR )
                        (var_decls 
                          (var_decl 
                            (type 
                              (classname 
                                (upperId )))
                            (simpleId 
                              (lowerId ))))
                        (BAR )
                        (formula 
                          (call 
                            (primary 
                              (variable 
                                (varname 
                                  (simpleId 
                                    (lowerId )))))
                            (DOT )
                            (predicateName 
                              (lowerId ))
                            (OPAR )
                            (CPAR )))
                        (BAR )
                        (formula 
                          (call 
                            (primary 
                              (variable 
                                (varname 
                                  (simpleId 
                                    (lowerId )))))
                            (DOT )
                            (predicateName 
                              (lowerId ))
                            (OPAR )
                            (CPAR )))
                        (CPAR )))))
                (OR )
                (formula 
                  (quantified 
                    (FORALL )
                    (OPAR )
                    (var_decls 
                      (var_decl 
                        (type 
                          (classname 
                            (upperId )))
                        (simpleId 
                          (lowerId ))))
                    (BAR )
                    (formula 
                      (call 
                        (primary 
                          (variable 
                            (varname 
                              (simpleId 
                                (lowerId )))))
                        (DOT )
                        (predicateName 
                          (lowerId ))
                        (OPAR )
                        (CPAR )))
                    (BAR )
                    (formula 
                      (call 
                        (primary 
                          (variable 
                            (varname 
                              (simpleId 
                                (lowerId )))))
                        (DOT )
                        (predicateName 
                          (lowerId ))
                        (OPAR )
                        (CPAR )))
                    (CPAR )))))
            (OR )
            (formula 
              (quantified 
                (FOREX )
                (OPAR )
                (var_decls 
                  (var_decl 
                    (type 
                      (classname 
                        (upperId )))
                    (simpleId 
                      (lowerId ))))
                (BAR )
                (formula 
                  (call 
                    (primary 
                      (variable 
                        (varname 
                          (simpleId 
                            (lowerId )))))
                    (DOT )
                    (predicateName 
                      (lowerId ))
                    (OPAR )
                    (CPAR )))
                (BAR )
                (formula 
                  (call 
                    (primary 
                      (variable 
                        (varname 
                          (simpleId 
                            (lowerId )))))
                    (DOT )
                    (predicateName 
                      (lowerId ))
                    (OPAR )
                    (CPAR )))
                (CPAR )))))
        (SELECT )
        (as_exprs 
          (as_expr 
            (expr 
              (primary 
                (variable 
                  (varname 
                    (simpleId 
                      (lowerId ))))))))))))